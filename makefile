##########################################################################################################################
# File automatically-generated by tool: [projectgenerator] version: [3.13.0-B3] date: [Mon Jun 14 10:23:28 CEST 2021]
##########################################################################################################################

# ------------------------------------------------
# Generic Makefile (based on gcc)
#
# ChangeLog :
#	2017-02-10 - Several enhancements + project update mode
#   2015-07-22 - first version
# ------------------------------------------------

######################################
# target
######################################
TARGET = stm32f4xx_drivers


######################################
# building variables
######################################
# debug build?
DEBUG = 1
# use semi-hosting
SEMIHOSTING = 1

# optimization
OPT= -O0 #Faster compile and build time (no optimization) and Better correlation between source code and generated code
#OPT= -Oz, -Omin #Smaller code size	
#OPT= -O2, -O3, -Ofast, -Omax #Faster performance	
#OPT= -O1 #Good debug experience without code bloat	
#OPT= -Os #Balanced code size reduction and fast performance	

# Path to stlink folder for uploading code to board
STLINK=~/Embedded/stlink-1.5.1


#######################################
# paths
#######################################
# Build path
BUILD_DIR = build

######################################
# source
######################################
# C sources
C_SOURCES =  \
/Users/geroldwilliams/Documents/MasteringMCU/MasteringMCU/stm32f4xx_Drivers/Src/018rtc_lcd.c \
/Users/geroldwilliams/Documents/MasteringMCU/MasteringMCU/stm32f4xx_Drivers/Src/sysmem.c \
/Users/geroldwilliams/Documents/MasteringMCU/MasteringMCU/stm32f4xx_Drivers/Drivers/Src/stm32f407xx_gpio_driver.c \
/Users/geroldwilliams/Documents/MasteringMCU/MasteringMCU/stm32f4xx_Drivers/Drivers/Src/stm32f407xx_i2c_driver.c \
/Users/geroldwilliams/Documents/MasteringMCU/MasteringMCU/stm32f4xx_Drivers/Drivers/Src/stm32f407xx_spi_driver.c \
/Users/geroldwilliams/Documents/MasteringMCU/MasteringMCU/stm32f4xx_Drivers/Drivers/Src/stm32f407xx_usart_driver.c \
/Users/geroldwilliams/Documents/MasteringMCU/MasteringMCU/stm32f4xx_Drivers/Drivers/Src/stm32f407xx_rcc_driver.c \
/Users/geroldwilliams/Documents/MasteringMCU/MasteringMCU/stm32f4xx_Drivers/bsp/ds1307.c \
/Users/geroldwilliams/Documents/MasteringMCU/MasteringMCU/stm32f4xx_Drivers/bsp/lcd.c \

ifneq ($(SEMIHOSTING), 1)
	C_SOURCES += /Users/geroldwilliams/Documents/MasteringMCU/MasteringMCU/stm32f4xx_Drivers/Src/syscalls.c
endif

# ASM sources
ASM_SOURCES =  \
/Users/geroldwilliams/Documents/MasteringMCU/MasteringMCU/stm32f4xx_Drivers/Startup/startup_stm32f407vgtx.s


#######################################
# binaries
#######################################
PREFIX = arm-none-eabi-
# The gcc compiler bin path can be either defined in make command via GCC_PATH variable (> make GCC_PATH=xxx)
# either it can be added to the PATH environment variable.
ifdef GCC_PATH
CC = $(GCC_PATH)/$(PREFIX)gcc
AS = $(GCC_PATH)/$(PREFIX)gcc -x assembler-with-cpp
CP = $(GCC_PATH)/$(PREFIX)objcopy
SZ = $(GCC_PATH)/$(PREFIX)size
OB = $(GCC_PATH)/$(PREFIX)objdump
DB = $(GCC_PATH)/$(PREFIX)gdb
else
CC = $(PREFIX)gcc
AS = $(PREFIX)gcc -x assembler-with-cpp
CP = $(PREFIX)objcopy
SZ = $(PREFIX)size
DB = $(PREFIX)gdb
OB = $(PREFIX)objdump
endif
HEX = $(CP) -O ihex
BIN = $(CP) -O binary -S
 
#######################################
# CFLAGS
#######################################
# cpu
CPU = -mcpu=cortex-m4

# fpu
# NONE for Cortex-M0/M0+/M3

# float-abi
#Software library functions for floating-point operations and software floating-point linkage.
#WARNING: Must use software fpu while using semi-hosting
FLOAT-ABI = -mfloat-abi=soft

#Hardware floating-point instructions and hardware floating-point linkage.
#FLOAT-ABI = -mfloat-abi=hard

# mcu
MCU = $(CPU) -mthumb $(FPU) $(FLOAT-ABI)

# macros for gcc
# AS defines
AS_DEFS = 

# C defines
C_DEFS =  \
-DSTM32 \
-DSTM32F407G_DISC1 \
-DSTM32F4 \
-DSTM32F407VGTx

# AS includes
AS_INCLUDES = 

# C includes
C_INCLUDES =  \
-I/Users/geroldwilliams/Documents/MasteringMCU/MasteringMCU/stm32f4xx_Drivers/Inc \
-I/Users/geroldwilliams/Documents/MasteringMCU/MasteringMCU/stm32f4xx_Drivers/Drivers/Inc \
-I/Users/geroldwilliams/Documents/MasteringMCU/MasteringMCU/stm32f4xx_Drivers/bsp \
-I/Users/geroldwilliams/Embedded/gnu-arm-none-eabi/arm-none-eabi/include 

# compile gcc flags
ASFLAGS = $(MCU) $(AS_DEFS) $(AS_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

CFLAGS = $(MCU) $(C_DEFS) $(C_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

ifeq ($(DEBUG), 1)
CFLAGS += -g -gdwarf-2
endif


# Generate dependency information
CFLAGS += -MMD -MP -MF"$(@:%.o=%.d)"


#######################################
# LDFLAGS
#######################################
# link script
LDSCRIPT = /Users/geroldwilliams/Documents/MasteringMCU/MasteringMCU/stm32f4xx_Drivers/STM32F407VGTX_FLASH.ld

# libraries
ifeq ($(SEMIHOSTING), 1)
LIBS = -lrdimon 
LDFLAGS = $(LIBDIR) $(LIBS) $(MCU) -T$(LDSCRIPT) --specs=nosys.specs -Wl,-Map=$(BUILD_DIR)/$(TARGET).map -Wl,--gc-sections -Wl,--no-warn-rwx-segment -specs=rdimon.specs --specs=nano.specs -Wl,--start-group -lc -lm -Wl,--end-group
LIBDIR =
else
LIBS = -lc -lm -lnosys  
LDFLAGS = $(MCU) -specs=nano.specs -T$(LDSCRIPT) $(LIBDIR) $(LIBS) -Wl,-Map=$(BUILD_DIR)/$(TARGET).map,--cref -Wl,--gc-sections -Wl,--no-warn-rwx-segment
LIBDIR = 
endif

# default action: build all
all: $(BUILD_DIR)/$(TARGET).elf $(BUILD_DIR)/$(TARGET).hex $(BUILD_DIR)/$(TARGET).bin $(BUILD_DIR)/$(TARGET).lst


#######################################
# build the application
#######################################
vpath %.h ../stm32f4xx_Drivers/Drivers/Inc 
# list of objects
OBJECTS = $(addprefix $(BUILD_DIR)/,$(notdir $(C_SOURCES:.c=.o)))
vpath %.c $(sort $(dir $(C_SOURCES)))
# list of ASM program objects
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASM_SOURCES:.s=.o)))
vpath %.s $(sort $(dir $(ASM_SOURCES)))

$(BUILD_DIR)/%.o: %.c makefile | $(BUILD_DIR) 
	$(CC) -c $(CFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.c=.lst)) $< -o $@

$(BUILD_DIR)/%.o: %.s makefile | $(BUILD_DIR)
	$(AS) -c $(CFLAGS) $< -o $@

$(BUILD_DIR)/$(TARGET).elf: $(OBJECTS) makefile
	$(CC) $(OBJECTS) $(LDFLAGS) -o $@
	$(SZ) $@

$(BUILD_DIR)/%.hex: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(HEX) $< $@

$(BUILD_DIR)/%.bin: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(BIN) $< $@

$(BUILD_DIR)/%.lst: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(OB) -h -S $< > $@

$(BUILD_DIR):
	mkdir $@

#######################################
# clean up
#######################################
clean:
	-rm -fR $(BUILD_DIR)

# Flash the STM32F4
burn: all
	$(STLINK)/st-flash --reset write $(BUILD_DIR)/$(TARGET).bin 0x8000000

# Debug
# ST-LINK UTILITY path
STLINK_UTIL = $(STLINK)/build/Release/src/gdbserver/st-util
debug: burn
	chmod +x debug_script.sh
	./debug_script.sh
.PHONY: all clean burn debug
#######################################
# dependencies
#######################################
-include $(wildcard $(BUILD_DIR)/*.d)

# *** EOF ***